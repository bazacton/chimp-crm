function encodeAjaxPostData(a) {
    return a = replaceAll("=", "~", a), a = replaceAll("&", "^", a)
}

function replaceAll(a, t, e) {
    return e.replace(new RegExp(a, "g"), t)
}
$(document).ready(function() {
        $.ajaxSetup({
            cache: !1
        }), $("body").on("click", "[data-act=ajax-modal]", function() {
            var a = {
                    ajaxModal: 1
                },
                t = $(this).attr("data-action-url"),
                e = $(this).attr("data-modal-lg"),
                n = $(this).attr("data-title");
            return t ? (n ? $("#ajaxModalTitle").html(n) : $("#ajaxModalTitle").html($("#ajaxModalTitle").attr("data-title")), $("#ajaxModalContent").html($("#ajaxModalOriginalContent").html()), $("#ajaxModalContent").find(".original-modal-body").removeClass("original-modal-body").addClass("modal-body"), $("#ajaxModal").modal("show"), $(this).each(function() {
                $.each(this.attributes, function() {
                    if (this.specified && this.name.match("^data-post-")) {
                        var t = this.name.replace("data-post-", "");
                        a[t] = this.value
                    }
                })
            }), ajaxModalXhr = $.ajax({
                url: t,
                data: a,
                cache: !1,
                type: "POST",
                success: function(a) {
                    $("#ajaxModal").find(".modal-dialog").removeClass("mini-modal"), "1" === e && $("#ajaxModal").find(".modal-dialog").addClass("modal-lg"), $("#ajaxModalContent").html(a);
                    var t = $("#ajaxModalContent").find(".modal-body"),
                        n = t.height(),
                        r = $(window).height() - 200;
                    n > r && (n = r, t.slimscroll({
                        alwaysVisible: !0,
                        height: n + "px",
                        color: "#98a6ad",
                        borderRadius: "0"
                    }))
                },
                statusCode: {
                    404: function() {
                        $("#ajaxModalContent").find(".modal-body").html(""), appAlert.error("404: Page not found.", {
                            container: ".modal-body",
                            animate: !1
                        })
                    }
                },
                error: function() {
                    $("#ajaxModalContent").find(".modal-body").html(""), appAlert.error("500: Internal Server Error.", {
                        container: ".modal-body",
                        animate: !1
                    })
                }
            }), !1) : (console.log("Ajax Modal: Set data-action-url!"), !1)
        }), $("#ajaxModal").on("hidden.bs.modal", function(a) {
            ajaxModalXhr.abort(), $("#ajaxModal").find(".modal-dialog").removeClass("modal-lg"), $("#ajaxModal").find(".modal-dialog").addClass("mini-modal"), $("#ajaxModalContent").html("")
        }), $("body").on("click", "[data-act=ajax-request]", function() {
            var a = {},
                t = $(this),
                e = t.attr("data-action-url"),
                n = t.attr("data-remove-on-success"),
                r = t.attr("data-remove-on-click"),
                o = t.attr("data-inline-loader"),
                i = t.attr("data-reload-on-success"),
                s = "";
            return t.attr("data-real-target") ? s = $(t.attr("data-real-target")) : t.attr("data-closest-target") && (s = t.closest(t.attr("data-closest-target"))), e ? (r && $(r).remove(), t.each(function() {
                $.each(this.attributes, function() {
                    if (this.specified && this.name.match("^data-post-")) {
                        var t = this.name.replace("data-post-", "");
                        a[t] = this.value
                    }
                })
            }), "1" === o ? t.addClass("inline-loader") : appLoader.show(), void(ajaxRequestXhr = $.ajax({
                url: e,
                data: a,
                cache: !1,
                type: "POST",
                success: function(a) {
                    i && location.reload(), n && $(n).remove(), appLoader.hide(), s.length && s.html(a)
                },
                statusCode: {
                    404: function() {
                        appLoader.hide(), appAlert.error("404: Page not found.")
                    }
                },
                error: function() {
                    appLoader.hide(), appAlert.error("500: Internal Server Error.")
                }
            }))) : (console.log("Ajax Request: Set data-action-url!"), !1)
        }), $("body").on("click", '[data-toggle="ajax-tab"] a', function() {
            var a = $(this),
                t = a.attr("href"),
                e = a.attr("data-target");
            return "" === $(e).html() && (appLoader.show({
                container: e,
                css: "right:50%; bottom:auto;"
            }), $.get(t, function(a) {
                $(e).html(a)
            })), a.tab("show"), !1
        }), $('[data-toggle="ajax-tab"] a').first().trigger("click"), $("body").on("click", '[data-toggle="app-modal"]', function() {
            return appContentModal.init({
                url: $(this).attr("data-url")
            }), !1
        })
    }),
    function(a) {
        a.fn.appForm = function(t) {
            function e(t, e) {
                a.validator.addMethod("greaterThanOrEqual", function(t, e, n) {
                    var r = n;
                    return !n || 0 !== n.indexOf("#") && 0 !== n.indexOf(".") || (r = a(n).val()), /Invalid|NaN/.test(new Date(t)) ? isNaN(t) && isNaN(r) || Number(t) >= Number(r) : new Date(t) >= new Date(r)
                }, "Must be greater than {0}."), a(t).validate({
                    submitHandler: function(a) {
                        return e ? void e(a) : !0
                    },
                    highlight: function(t) {
                        a(t).closest(".form-group").addClass("has-error")
                    },
                    unhighlight: function(t) {
                        a(t).closest(".form-group").removeClass("has-error")
                    },
                    errorElement: "span",
                    errorClass: "help-block",
                    ignore: ":hidden:not(.validate-hidden)",
                    errorPlacement: function(a, t) {
                        t.parent(".input-group").length ? a.insertAfter(t.parent()) : a.insertAfter(t)
                    }
                }), a(".validate-hidden").click(function() {
                    a(this).closest(".form-group").removeClass("has-error").find(".help-block").hide()
                })
            }

            function n(t) {
                var e = t.height() - 80;
                e > 0 && (e = Math.floor(e / 2)), t.append("<div class='modal-mask'><div class='circle-loader'></div></div>");
                var n = t.height(),
                    r = t.closest(".modal-content").find(".slimScrollDiv");
                r.length && r.find(".modal-body").length && (n = 2e4, r.removeClass("slimScrollDiv").addClass("slimScrollDiv-deleted"), t.closest(".modal-content").find(".slimScrollBar").css({
                    "z-index": "-1"
                })), a(".modal-mask").css({
                    width: t.width() + 30 + "px",
                    height: n + "px",
                    "padding-top": e + "px"
                }), t.closest(".modal-dialog").find('[type="submit"]').attr("disabled", "disabled")
            }

            function r() {
                var t = a(".modal-body");
                t.closest(".modal-dialog").find('[type="submit"]').removeAttr("disabled"), t.closest(".modal-content").find(".slimScrollDiv-deleted").removeClass("slimScrollDiv-deleted").addClass("slimScrollDiv"), t.closest(".modal-content").find(".slimScrollBar").css({
                    "z-index": "auto"
                }), a(".modal-mask").remove()
            }

            function o(t) {
                t && (a(".modal-mask").html("<div class='circle-done'><i class='fa fa-check'></i></div>"), setTimeout(function() {
                    a(".modal-mask").find(".circle-done").addClass("ok")
                }, 30)), setTimeout(function() {
                    a(".modal-mask").remove(), a("#ajaxModal").modal("toggle"), s.onModalClose()
                }, 1e3)
            }
            var i = {
                    ajaxSubmit: !0,
                    isModal: !0,
                    dataType: "json",
                    onModalClose: function() {},
                    onSuccess: function() {},
                    onError: function() {
                        return !0
                    },
                    onSubmit: function() {},
                    onAjaxSuccess: function() {},
                    beforeAjaxSubmit: function(a, t, e) {}
                },
                s = a.extend({}, i, t);
            this.each(function() {
                s.ajaxSubmit ? e(a(this), function(t) {
                    s.onSubmit(), s.isModal && n(a("#ajaxModalContent").find(".modal-body")), a(t).ajaxSubmit({
                        dataType: s.dataType,
                        beforeSubmit: function(a, t, e) {
                            s.beforeAjaxSubmit(a, t, e)
                        },
                        success: function(a) {
                            s.onAjaxSuccess(a), a.success ? (s.onSuccess(a), s.isModal && o(!0)) : s.onError(a) && (s.isModal ? (r(), a.message && appAlert.error(a.message, {
                                container: ".modal-body",
                                animate: !1
                            })) : a.message && appAlert.error(a.message))
                        }
                    })
                }) : e(a(this))
            })
        }
    }(jQuery), "undefined" != typeof TableTools && (TableTools.DEFAULTS.sSwfPath = AppHelper.assetsDirectory + "js/datatable/TableTools/swf/copy_csv_xls_pdf.swf"),
    function(a) {
        a.fn.appTable = function(t) {
            var e = 1 * AppHelper.settings.displayLength;
            (isNaN(e) || !e) && (e = 10);
            var n = {
                    source: "",
                    xlsColumns: [],
                    pdfColumns: [],
                    printColumns: [],
                    columns: [],
                    order: [
                        [0, "asc"]
                    ],
                    hideTools: !1,
                    displayLength: e,
                    dateRangeType: "",
                    checkBoxes: [],
                    radioButtons: [],
                    filterDropdown: [],
                    filterParams: {
                        datatable: !0
                    },
                    onDeleteSuccess: function() {},
                    onUndoSuccess: function() {},
                    onInitComplete: function() {},
                    customLanguage: {
                        printButtonToolTip: "Press escape when finished",
                        today: "Today",
                        yesterday: "Yesterday",
                        tomorrow: "Tomorrow"
                    },
                    footerCallback: function(a, t, e, n, r) {},
                    rowCallback: function(a, t, e, n) {},
                    summation: ""
                },
                r = a(this);
            if (!r.is("table")) return console.log("Element must have to be a table", this), !1;
            var o = a.extend({}, n, t);
            if (o.reload) {
                var i = a(this).dataTable(),
                    s = window.InstanceCollection[a(this).selector];
                return s || (s = o), i.fnReloadAjax(s.filterParams), !1
            }
            if (o.newData) {
                var i = a(this).dataTable();
                if (o.dataId) {
                    var l = a(this).find("[data-post-id='" + o.dataId + "']");
                    if (l.length) i.fnDeleteRow(l.closest("tr"));
                    else {
                        var d = a(this).find("[data-index-id='" + o.dataId + "']");
                        d.length && i.fnDeleteRow(d.closest("tr"))
                    }
                }
                return i.fnAddRow(o.newData), !1
            }
            o._visible_columns = [], a.each(o.columns, function(a, t) {
                t.visible !== !1 && o._visible_columns.push(a)
            }), o._exportable = o.xlsColumns.length + o.pdfColumns.length + o.printColumns.length, o._firstDayOfWeek = AppHelper.settings.firstDayOfWeek || 0, o._inputDateFormat = "YYYY-MM-DD";
            var c = function(a) {
                    a || (a = moment().format("YYYY-MM-DD"));
                    var t = moment(a).format("E"),
                        e = t - AppHelper.settings.firstDayOfWeek,
                        n = {};
                    return 7 > e ? n.firstDateOfWeek = moment(a).subtract(e, "days").format("YYYY-MM-DD") : n.firstDateOfWeek = moment(a).format("YYYY-MM-DD"), 0 > e && (n.firstDateOfWeek = moment(n.firstDateOfWeek).subtract(7, "days").format("YYYY-MM-DD")), n.lastDateOfWeek = moment(n.firstDateOfWeek).add(6, "days").format("YYYY-MM-DD"), n
                },
                m = function() {
                    if ("daily" === o.dateRangeType) o.filterParams.start_date = moment().format(o._inputDateFormat), o.filterParams.end_date = o.filterParams.start_date;
                    else if ("monthly" === o.dateRangeType) {
                        var a = moment().daysInMonth(),
                            t = moment().format("YYYY-MM");
                        o.filterParams.start_date = t + "-01", o.filterParams.end_date = t + "-" + a
                    } else if ("yearly" === o.dateRangeType) {
                        var e = moment().format("YYYY");
                        o.filterParams.start_date = e + "-01-01", o.filterParams.end_date = e + "-12-31"
                    } else if ("weekly" === o.dateRangeType) {
                        var n = c();
                        o.filterParams.start_date = n.firstDateOfWeek, o.filterParams.end_date = n.lastDateOfWeek
                    }
                },
                f = function() {
                    var t = [],
                        e = "";
                    a.each(o.checkBoxes, function(a, n) {
                        e = n.name, n.isChecked && t.push(n.value)
                    }), o.filterParams[e] = t
                },
                u = function() {
                    a.each(o.radioButtons, function(a, t) {
                        t.isChecked && (o.filterParams[t.name] = t.value)
                    })
                };
            m(), f(), u();
            var p = {
                ajax: {
                    url: o.source,
                    type: "POST",
                    data: o.filterParams
                },
                sServerMethod: "POST",
                columns: o.columns,
                bProcessing: !0,
                iDisplayLength: o.displayLength,
                bAutoWidth: !1,
                bSortClasses: !1,
                order: o.order,
                fnInitComplete: function() {
                    o.onInitComplete(this)
                },
                language: {
                    lengthMenu: "_MENU_ per page",
                    zeroRecords: "No record found.",
                    search: "",
                    searchPlaceholder: "Search...",
                    sProcessing: "<div class='table-loader'><span class='loading'></span></div>",
                    oPaginate: {
                        sPrevious: "<i class='fa fa-angle-double-left'></i>",
                        sNext: "<i class='fa fa-angle-double-right'></i>"
                    }
                },
                sDom: "",
                footerCallback: function(t, e, n, r, i) {
                    var s = this;
                    if (o.summation) {
                        var l = s.api().page.info();
                        if (!l.recordsTotal) return a(s).find("tfoot").hide(), !1;
                        a(s).find("tfoot").show(), a.each(o.summation, function(t, e) {
                            var n = calculateDatatableTotal(s, e.column, function(a) {
                                return "currency" === e.dataType ? unformatCurrency(a) : "time" === e.dataType ? moment.duration(a).asSeconds() : a
                            }, !0);
                            if ("currency" === e.dataType ? n = toCurrency(n, e.currencySymbol) : "time" === e.dataType && (n = secondsToTimeFormat(n)), a(s).find("[data-current-page=" + e.column + "]").html(n), l.pages > 1) {
                                a(s).find("[data-section='all_pages']").show();
                                var r = calculateDatatableTotal(s, e.column, function(a) {
                                    return "currency" === e.dataType ? unformatCurrency(a) : "time" === e.dataType ? moment.duration(a).asSeconds() : a
                                });
                                "currency" === e.dataType ? r = toCurrency(r, e.currencySymbol) : "time" === e.dataType && (r = secondsToTimeFormat(r)), a(s).find("[data-all-page=" + e.column + "]").html(r)
                            } else a(s).find("[data-section='all_pages']").hide()
                        })
                    }
                    o.footerCallback(t, e, n, r, i, s)
                },
                fnRowCallback: function(a, t, e, n) {
                    o.rowCallback(a, t, e, n)
                }
            };
            if (o.hideTools || (p.sDom = "<'datatable-tools'<'col-md-3'l><'col-md-9 custom-toolbar'f>r>t<'datatable-tools clearfix'<'col-md-3'i><'col-md-9'p>>"), o._exportable) {
                var h = [];
                if (o.xlsColumns.length && h.push({
                        sExtends: "xls",
                        mColumns: o.xlsColumns
                    }), o.pdfColumns.length && h.push({
                        sExtends: "pdf",
                        mColumns: o.pdfColumns
                    }), o.printColumns.length) {
                    var g = function(a, t) {
                        return a.filter(function(a) {
                            return t.indexOf(a) < 0
                        })
                    };
                    o._hiddenColumns = g(o._visible_columns, o.printColumns), h.push({
                        sExtends: "print",
                        sToolTip: o.customLanguage.printButtonToolTip,
                        sInfo: "",
                        fnClick: function(t, e) {
                            for (var n in o._hiddenColumns) v.fnSetColumnVis(o._hiddenColumns[n], !1);
                            a("html").addClass("print-peview"), a(".slimScrollDiv").addClass("print-peview"), a(".scrollable-page").addClass("print-peview"), this.fnPrint(!0, e), a(window).keydown(function(t) {
                                if (27 === t.which) {
                                    for (var e in o._hiddenColumns) v.fnSetColumnVis(o._hiddenColumns[e], !0);
                                    a(".print-peview").removeClass("print-peview"), setPageScrollable(), a(".dataTables_processing").hide()
                                }
                            })
                        }
                    })
                }
                o.hideTools || (p.sDom = "<'datatable-tools'<'col-md-3'l><'col-md-9 custom-toolbar'f<'datatable-export'T>>r>t<'datatable-tools clearfix'<'col-md-3'i><'col-md-9'p>>"), p.oTableTools = {
                    aButtons: h
                }
            }
            var v = r.dataTable(p),
                b = r.closest(".dataTables_wrapper");
            if (b.find(".DTTT_button_print").tooltip({
                    placement: "bottom",
                    container: "body"
                }), b.find("select").select2({
                    minimumResultsForSearch: -1
                }), o.dateRangeType) {
                var y = '<div class="mr15 DTTT_container"><button data-act="prev" class="btn btn-default date-range-selector"><i class="fa fa-chevron-left"></i></button><button data-act="datepicker" class="btn btn-default" style="margin: -1px"></button><button data-act="next"  class="btn btn-default date-range-selector"><i class="fa fa-chevron-right"></i></button></div>';
                b.find(".custom-toolbar").append(y);
                var _ = b.find("[data-act='datepicker']"),
                    T = b.find(".date-range-selector");
                if ("daily" === o.dateRangeType) {
                    var x = function(a) {
                        o.filterParams.start_date === moment().format(o._inputDateFormat) ? a.html(o.customLanguage.today) : o.filterParams.start_date === moment().subtract(1, "days").format(o._inputDateFormat) ? a.html(o.customLanguage.yesterday) : o.filterParams.start_date === moment().add(1, "days").format(o._inputDateFormat) ? a.html(o.customLanguage.tomorrow) : a.html(moment(o.filterParams.start_date).format("Do, MMMM YYYY"))
                    };
                    m(), x(_), _.datepicker({
                        format: o._inputDateFormat,
                        autoclose: !0,
                        todayHighlight: !0
                    }).on("changeDate", function(a) {
                        var t = moment(a.date).format(o._inputDateFormat);
                        o.filterParams.start_date = t, o.filterParams.end_date = t, x(_), r.appTable({
                            reload: !0,
                            filterParams: o.filterParams
                        })
                    }), T.click(function() {
                        var t = a(this).attr("data-act"),
                            e = "";
                        "next" === t ? e = moment(o.filterParams.start_date).add(1, "days").format(o._inputDateFormat) : "prev" === t && (e = moment(o.filterParams.start_date).subtract(1, "days").format(o._inputDateFormat)), o.filterParams.start_date = e, o.filterParams.end_date = e, x(_), r.appTable({
                            reload: !0,
                            filterParams: o.filterParams
                        })
                    })
                }
                if ("monthly" === o.dateRangeType) {
                    var D = function(a) {
                        a.html(moment(o.filterParams.start_date).format("MMMM YYYY"))
                    };
                    m(), D(_), _.datepicker({
                        format: "YYYY-MM",
                        viewMode: "months",
                        minViewMode: "months",
                        autoclose: !0
                    }).on("changeDate", function(a) {
                        var t = moment(a.date).format(o._inputDateFormat),
                            e = moment(t).daysInMonth(),
                            n = moment(t).format("YYYY-MM");
                        o.filterParams.start_date = n + "-01", o.filterParams.end_date = n + "-" + e, D(_), r.appTable({
                            reload: !0,
                            filterParams: o.filterParams
                        })
                    }), T.click(function() {
                        var t = a(this).attr("data-act"),
                            e = moment(o.filterParams.start_date),
                            n = moment(o.filterParams.end_date);
                        "next" === t ? (e = e.add(1, "months").format(o._inputDateFormat), n = n.add(1, "months").format(o._inputDateFormat)) : "prev" === t && (e = e.subtract(1, "months").format(o._inputDateFormat), n = n.subtract(1, "months").format(o._inputDateFormat)), o.filterParams.start_date = e, o.filterParams.end_date = n, D(_), r.appTable({
                            reload: !0,
                            filterParams: o.filterParams
                        })
                    })
                }
                if ("yearly" === o.dateRangeType) {
                    var w = function(a) {
                        a.html(moment(o.filterParams.start_date).format("YYYY"))
                    };
                    m(), w(_), _.datepicker({
                        format: "YYYY-MM",
                        viewMode: "years",
                        minViewMode: "years",
                        autoclose: !0
                    }).on("changeDate", function(a) {
                        var t = moment(a.date).format(o._inputDateFormat),
                            e = moment(t).format("YYYY");
                        o.filterParams.start_date = e + "-01-01", o.filterParams.end_date = e + "-12-31", w(_), r.appTable({
                            reload: !0,
                            filterParams: o.filterParams
                        })
                    }), T.click(function() {
                        var t = a(this).attr("data-act"),
                            e = moment(o.filterParams.start_date),
                            n = moment(o.filterParams.end_date);
                        "next" === t ? (e = e.add(1, "years").format(o._inputDateFormat), n = n.add(1, "years").format(o._inputDateFormat)) : "prev" === t && (e = e.subtract(1, "years").format(o._inputDateFormat), n = n.subtract(1, "years").format(o._inputDateFormat)), o.filterParams.start_date = e, o.filterParams.end_date = n, w(_), r.appTable({
                            reload: !0,
                            filterParams: o.filterParams
                        })
                    })
                }
                if ("weekly" === o.dateRangeType) {
                    var P = function(a) {
                        var t = moment(o.filterParams.start_date).format("Do MMM"),
                            e = moment(o.filterParams.end_date).format("Do MMM, YYYY");
                        _.datepicker({
                            format: "YYYY-MM-DD",
                            autoclose: !0,
                            calendarWeeks: !0,
                            weekStart: AppHelper.settings.firstDayOfWeek
                        }), a.html(t + " - " + e)
                    };
                    m(), P(_), T.click(function() {
                        var t = a(this).attr("data-act"),
                            e = moment(o.filterParams.start_date),
                            n = moment(o.filterParams.end_date);
                        "next" === t ? (e = e.add(7, "days").format(o._inputDateFormat), n = n.add(7, "days").format(o._inputDateFormat)) : "prev" === t && (e = e.subtract(7, "days").format(o._inputDateFormat), n = n.subtract(7, "days").format(o._inputDateFormat)), o.filterParams.start_date = e, o.filterParams.end_date = n, P(_), r.appTable({
                            reload: !0,
                            filterParams: o.filterParams
                        })
                    }), _.datepicker({
                        format: o._inputDateFormat,
                        autoclose: !0,
                        calendarWeeks: !0,
                        weekStart: AppHelper.settings.firstDayOfWeek
                    }).on("show", function() {
                        a(".datepicker").addClass("week-view"), a(".datepicker-days").find(".active").siblings(".day").addClass("active")
                    }).on("changeDate", function(a) {
                        var t = c(a.date);
                        o.filterParams.start_date = t.firstDateOfWeek, o.filterParams.end_date = t.lastDateOfWeek, P(_), r.appTable({
                            reload: !0,
                            filterParams: o.filterParams
                        })
                    })
                }
            }
            if ("undefined" != typeof o.checkBoxes[0]) {
                var C = "",
                    M = [],
                    k = "";
                a.each(o.checkBoxes, function(a, t) {
                    var e = "",
                        n = "";
                    k = t.name, t.isChecked && (e = " checked", n = " active", M.push(t.value)), C += '<label class="btn btn-default ' + n + '">', C += '<input type="checkbox" name="' + t.name + '" value="' + t.value + '" autocomplete="off" ' + e + ">" + t.text, C += "</label>"
                }), o.filterParams[k] = M;
                var S = '<div class="mr15 DTTT_container"><div class="btn-group filter" data-act="checkbox" data-toggle="buttons">' + C + "</div></div>";
                b.find(".custom-toolbar").append(S);
                var Y = b.find("[data-act='checkbox']");
                Y.click(function() {
                    var t = a(this);
                    setTimeout(function() {
                        var e = [],
                            n = "";
                        t.parent().find("input:checkbox").each(function() {
                            n = a(this).attr("name"), a(this).is(":checked") && e.push(a(this).val())
                        }), o.filterParams[n] = e, r.appTable({
                            reload: !0,
                            filterParams: o.filterParams
                        })
                    })
                })
            }
            if ("undefined" != typeof o.radioButtons[0]) {
                var j = "";
                a.each(o.radioButtons, function(a, t) {
                    var e = "",
                        n = "";
                    var total_new = '';
                    if ( t.total_count != undefined && t.total_count > 0 ){
                        total_new = '<span class="new-msgs">'+t.total_count+'</span>';    
                    }
                    t.isChecked && (e = " checked", n = " active", o.filterParams[t.name] = t.value), j += '<label class="btn btn-default data-table-quotation ' + n + '">', j += '<input type="radio" name="' + t.name + '" value="' + t.value + '" autocomplete="off" ' + e + ">" + t.text, j += total_new +"</label>"
                });
                var A = '<div class="mr15 DTTT_container"><div class="btn-group filter" data-act="radio" data-toggle="buttons">' + j + "</div></div>";
                b.find(".custom-toolbar").append(A);
                var $ = b.find("[data-act='radio']");
                $.click(function() {
                    var t = a(this);
                    setTimeout(function() {
                        t.parent().find("input:radio").each(function() {
                            a(this).is(":checked") && (o.filterParams[a(this).attr("name")] = a(this).val())
                        }), r.appTable({
                            reload: !0,
                            filterParams: o.filterParams
                        })
                    })
                })
            }
            if ("undefined" != typeof o.filterDropdown[0]) {
                var j = "";
                a.each(o.filterDropdown, function(t, e) {
                    var n = "",
                        i = "";
                    a.each(e.options, function(a, t) {
                        var e = "";
                        t.isSelected && (e = "selected", i = t.id), n += "<option " + e + ' value="' + t.id + '">' + t.text + "</option>"
                    }), e.name && (o.filterParams[e.name] = i);
                    var s = '<div class="mr15 DTTT_container"><select class="' + e["class"] + '" name="' + e.name + '">' + n + "</select></div>";
                    b.find(".custom-toolbar").append(s);
                    var l = b.find("[name='" + e.name + "']");
                    void 0 !== window.Select2 && l.select2(), l.change(function() {
                        var t = a(this);
                        o.filterParams[t.attr("name")] = t.val(), r.appTable({
                            reload: !0,
                            filterParams: o.filterParams
                        })
                    })
                })
            }
            var F = function(t) {
                    a('<a class="undo-delete" href="javascript:;"><strong>Undo</strong></a>').insertAfter(a(t.alertSelector).find(".app-alert-message")), a(t.alertSelector).find(".undo-delete").bind("click", function() {
                        a(t.alertSelector).remove(), appLoader.show(), a.ajax({
                            url: t.url,
                            type: "POST",
                            dataType: "json",
                            data: {
                                id: t.id,
                                undo: !0
                            },
                            success: function(a) {
                                appLoader.hide(), a.success && (r.appTable({
                                    newData: a.data
                                }), o.onUndoSuccess(a))
                            }
                        })
                    })
                },
                O = function(t) {
                    appLoader.show();
                    var e = a(t.currentTarget),
                        n = e.attr("data-action-url"),
                        i = e.attr("data-id");
                    a.ajax({
                        url: n,
                        type: "POST",
                        dataType: "json",
                        data: {
                            id: i
                        },
                        success: function(a) {
                            if (a.success) {
                                var t = e.closest("tr"),
                                    s = r.DataTable();
                                v.fnDeleteRow(s.row(t).index());
                                var l = appAlert.warning(a.message, {
                                    duration: 2e4
                                });
                                o.onDeleteSuccess(a), F({
                                    alertSelector: l,
                                    url: n,
                                    id: i
                                })
                            } else appAlert.error(a.message);
                            appLoader.hide()
                        }
                    })
                };
            window.InstanceCollection = window.InstanceCollection || {}, window.InstanceCollection["#" + this.id] = o, a("body").find(r).on("click", "[data-action=delete]", O), a.fn.dataTableExt.oApi.getSettings = function(a) {
                return a
            }, a.fn.dataTableExt.oApi.fnReloadAjax = function(t, e) {
                this.fnClearTable(this), this.oApi._fnProcessingDisplay(t, !0);
                var n = this;
                a.ajax({
                    url: t.ajax.url,
                    type: "POST",
                    dataType: "json",
                    data: e,
                    success: function(a) {
                        for (var e = 0; e < a.data.length; e++) n.oApi._fnAddData(t, a.data[e]);
                        t.aiDisplay = t.aiDisplayMaster.slice(), n.fnDraw(n), n.oApi._fnProcessingDisplay(t, !1)
                    }
                })
            }, a.fn.dataTableExt.oApi.fnAddRow = function(a, t) {
                this.oApi._fnAddData(a, t), this.fnDraw(this)
            }
        }
    }(jQuery),
    function(a) {
        a(["jquery"], function(a) {
            return function() {
                function t(a, t) {
                    return this._settings = i(t), this._settings.alertType = "info", d(a), "#" + this._settings.alertId
                }

                function e(a, t) {
                    return this._settings = i(t), this._settings.alertType = "success", d(a), "#" + this._settings.alertId
                }

                function n(a, t) {
                    return this._settings = i(t), this._settings.alertType = "warning", d(a), "#" + this._settings.alertId
                }

                function r(a, t) {
                    return this._settings = i(t), this._settings.alertType = "error", d(a), "#" + this._settings.alertId
                }

                function o(a) {
                    var t = "info";
                    return "error" === this._settings.alertType ? t = "danger" : "success" === this._settings.alertType ? t = "success" : "warning" === this._settings.alertType && (t = "warning"), this._settings.animate && (t += " animate"), '<div id="' + this._settings.alertId + '" class="app-alert alert alert-' + t + ' alert-dismissible " role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button><div class="app-alert-message">' + a + '</div><div class="progress"><div class="progress-bar progress-bar-' + t + ' hide" role="progressbar" aria-valuenow="60" aria-valuemin="0" aria-valuemax="100" style="width: 100%"></div></div></div>'
                }

                function i(t) {
                    if (!t) var t = {};
                    return t.alertId = "app-alert-" + s(), this._settings = a.extend({}, m.options, t)
                }

                function s() {
                    for (var a = "", t = "abcdefghijklmnopqrstuvwxyz0123456789", e = 0; 5 > e; e++) a += t.charAt(Math.floor(Math.random() * t.length));
                    return a
                }

                function l() {
                    this._settings.clearAll && a("[role='alert']").remove()
                }

                function d(t) {
                    l();
                    var e = a(this._settings.container);
                    e.length ? (this._settings.animate && setTimeout(function() {
                        a(".app-alert").animate({
                            opacity: 1,
                            right: "40px"
                        }, 500, function() {
                            a(".app-alert").animate({
                                right: "15px"
                            }, 300)
                        })
                    }, 20), a(this._settings.container).prepend(o(t)), c()) : console.log("appAlert: container must be an html selector!")
                }

                function c() {
                    if (this._settings.duration && this._settings.showProgressBar) {
                        var t = "#" + this._settings.alertId,
                            e = a(t).find(".progress-bar");
                        e.removeClass("hide").width(0);
                        var n = "width " + this._settings.duration + "ms ease";
                        e.css({
                            WebkitTransition: n,
                            MozTransition: n,
                            MsTransition: n,
                            OTransition: n,
                            transition: n
                        }), setTimeout(function() {
                            a(t).length > 0 && a(t).remove()
                        }, this._settings.duration)
                    }
                }
                var m = {
                    info: t,
                    success: e,
                    warning: n,
                    error: r,
                    options: {
                        container: "body",
                        duration: 0,
                        showProgressBar: !0,
                        clearAll: !0,
                        animate: !0
                    }
                };
                return m
            }()
        })
    }(function(a, t) {
        window.appAlert = t(window.jQuery)
    }),
    function(a) {
        a(["jquery"], function(a) {
            return function() {
                function t(t) {
                    var e = a("#app-loader");
                    if (this._settings = n(t), !e.length) {
                        var r = a(this._settings.container);
                        r.length ? r.append('<div id="app-loader" class="app-loader" style="z-index:' + this._settings.zIndex + ";" + this._settings.css + '"><div class="loading"></div></div>') : console.log("appLoader: container must be an html selector!")
                    }
                }

                function e() {
                    var t = a("#app-loader");
                    t.length && t.remove()
                }

                function n(t) {
                    if (!t) var t = {};
                    return this._settings = a.extend({}, r.options, t)
                }
                var r = {
                    show: t,
                    hide: e,
                    options: {
                        container: "body",
                        zIndex: "auto",
                        css: ""
                    }
                };
                return r
            }()
        })
    }(function(a, t) {
        window.appLoader = t(window.jQuery)
    }),
    function(a) {
        a(["jquery"], function(a) {
            return function() {
                function t(a) {
                    27 === a.keyCode && n()
                }

                function e(a) {
                    this._settings = r(a), o(this._settings)
                }

                function n() {
                    a(".app-modal").remove(), a(document).unbind("keyup", t), "undefined" != typeof appModalXhr && appModalXhr.abort()
                }

                function r(t) {
                    if (!t) var t = {};
                    return this._settings = a.extend({}, appLoader.options, t)
                }

                function o(e) {
                    var r = "<div class='app-modal loading'>                                <i class='fa fa-compress compress'></i>                                <div class='app-modal-body'>                                    <div class='app-modal-content'>                                        <i class='fa fa-expand expand'></i>                                        <div class='app-modal-content-area'>                                        </div>                                    </div>                                    <div class='app-modal-sidebar hide-xs'>                                        <div class='app-modal-close'><span>&times;</span></div>                                        <div class='app-moadl-sidebar-scrollbar'>                                            <div class='app-modal-sidebar-area'>                                            </div>                                        </div>                                    </div>                                </div>                            </div>";
                    n(), a("body").prepend(r), a(".app-moadl-sidebar-scrollbar").slimscroll({
                        height: a(window).height() - 60 + "px",
                        borderRadius: "0"
                    }), a(".expand").click(function() {
                        a(".app-modal").addClass("full-content")
                    }), a(".compress").click(function() {
                        a(".app-modal").removeClass("full-content")
                    }), a(".app-modal-close").click(function() {
                        n()
                    }), a(document).bind("keyup", t), appLoader.show({
                        container: ".app-modal",
                        css: "top:35%; right:48%;"
                    }), appModalXhr = a.ajax({
                        url: e.url || "",
                        data: {},
                        cache: !1,
                        type: "POST",
                        success: function(t) {
                            var e = a(t);
                            a(".app-modal-content-area").html(e.find(".app-modal-content").html()), a(".app-modal-sidebar-area").html(e.find(".app-modal-sidebar").html()), e.remove(), a(".app-modal").removeClass("loading"), appLoader.hide()
                        },
                        statusCode: {
                            404: function() {
                                i.destroy(), appAlert.error("404: Page not found.")
                            }
                        },
                        error: function() {
                            i.destroy(), appAlert.error("500: Internal Server Error.")
                        }
                    })
                }
                var i = {
                    init: e,
                    destroy: n,
                    options: {
                        url: "",
                        css: ""
                    }
                };
                return i
            }()
        })
    }(function(a, t) {
        window.appContentModal = t(window.jQuery)
    }), replaceAllString = function(a, t, e) {
        return a.split(t).join(e)
    }, toCurrency = function(a, t) {
        a = parseFloat(a).toFixed(2), t || (t = AppHelper.settings.currencySymbol);
        var e = a.replace(/(\d)(?=(\d{3})+\.)/g, "$1,");
        return "," === AppHelper.settings.decimalSeparator && (e = replaceAllString(e, ".", "_"), e = replaceAllString(e, ",", "."), e = replaceAllString(e, "_", ",")), "none" === t && (t = ""), t + "" + e
    }, calculateDatatableTotal = function(a, t, e, n) {
        var r = a.api(),
            o = {};
        return n && (o = {
            page: "current"
        }), r.column(t, o).data().reduce(function(a, t) {
            return e ? a + e(t) : a + t
        }, 0)
    }, unformatCurrency = function(a) {
        return a = a.toString(), a && (a = a.replace(/[^0-9.,]/g, ""), (0 == a.indexOf(".") || 0 == a.indexOf(",")) && (a = a.slice(1)), "," === AppHelper.settings.decimalSeparator ? (a = replaceAllString(a, ".", ""), a = replaceAllString(a, ",", ".")) : a = replaceAllString(a, ",", ""), a = 1 * a), a ? a : 0
    }, secondsToTimeFormat = function(a) {
        var t = parseInt(a, 10),
            e = Math.floor(t / 3600),
            n = Math.floor((t - 3600 * e) / 60),
            r = t - 3600 * e - 60 * n;
        10 > e && (e = "0" + e), 10 > n && (n = "0" + n), 10 > r && (r = "0" + r);
        var o = e + ":" + n + ":" + r;
        return o
    };